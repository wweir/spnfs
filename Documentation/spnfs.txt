(c) 2007 Network Appliance Inc.

spNFS
-----

An spNFS system consists of a Meta Data Server (MDS), a number of Client machines (C) and a number of Data Servers (DS).

A file system is mounted by the clients from the MDS, and all file data
is striped across the DSs.

Identify the machines that will be filling each of these roles.

The spnfs kernel will be installed on all machines: clients, the MDS and DSs.


Building and installing the spNFS kernel
----------------------------------------

Get the spNFS kernel from:

	git://linux-nfs.org/~dmuntz/spnfs.git

add these options to your .config file

	CONFIG_NETWORK_FILESYSTEMS=y
	CONFIG_NFS_FS=y
	CONFIG_NFSD=y
	CONFIG_NFS_V4_1=y
	CONFIG_NFSD_V4_1=y
	CONFIG_PNFS=y
	CONFIG_PNFSD=y
	CONFIG_SPNFS=y

Building and installation of kernel+modules is as usual.
This kernel should be installed and booted on the client, MDS and DSs.


Building nfs-utils
------------------

Get the nfs-utils package containing spnfsd from:

	git://linux-nfs.org/~dmuntz/nfs-utils.git

Follow the standard instructions for building nfs-utils.  We HIGHLY recommend
NOT doing an install of the binaries generated by this build.  You will only
need the spnfsd binary generated by this build, and the spnfsd.conf template.

After building, the spnfsd daemon will be located in utils/spnfsd.  The spnfsd
daemon will only be needed on the MDS.


Installation
------------

The nfs-utils package contains a default spnfsd.conf file in
utils/spnfsd/spnfsd.conf.  Copy this file to /etc/spnfsd.conf.

By default, the DS-Mount-Directory is set to /spnfs (see spnfsd.conf).  Under
this directory, mount points must be created for each DS to
be used for pNFS data stripes.  These mount points are named by the ip address
of the corresponding DS.  In the sample spnfsd.conf, there are two
DSs defined (172.16.28.134 and 172.16.28.141).

Following the sample spnfsd.conf,

	mkdir /spnfs

on the MDS (corresponding to DS-Mount-Directory).  Then

	mkdir /spnfs/172.16.28.134
	mkdir /spnfs/172.16.28.141

to create the mount points for the DSs.

On the DSs, chose a directory where data stripes will be created by the MDS.
For the sample file, this directory is /pnfs, so on each DS execute:

	mkdir /pnfs

This directory is specified in the spnfsd.conf file by the DS*_ROOT option
(where * is replaced by the DS number).  DS_ROOT is specified relative to
the directory being exported by the DSs.  In our example, our DSs are exporting
the root directory (/) and therefore our DS_ROOT is /pnfs.  On the DSs, we have
the following entry in /etc/exports:

	/ *(rw,fsid=0,insecure,no_root_squash,sync,no_subtree_check)

N.B. If we had created a /exports directory and a /pnfs directory under
/exports, and if we were exporting /exports, then DS_ROOT would still be /pnfs
(not /exports/pnfs).

It may be useful to add entries to /etc/fstab on the MDS to automatically
mount the DS_ROOT file systems.  For this example, our MDS fstab would
contain:

	172.17.84.128:/pnfs /spnfs/172.17.84.128 nfs    defaults        1 2
	172.17.84.122:/pnfs /spnfs/172.17.84.122 nfs    defaults        1 2

The DS mounts must be performed manually or via fstab at this time (automatic
mounting, directory creation, etc. are on the todo list).

On the MDS, choose a file system to use with spNFS and export it, e.g.:

	/ *(rw,fsid=0,insecure,no_root_squash,sync,no_subtree_check)

Make sure nfsd and all supporting processes are running on the MDS and DSs.


Running
-------

If rpc_pipefs is not already mounted (if you're running idmapd it probably is),
you may want to add the following line to /etc/fstab:

	rpc_pipefs    /var/lib/nfs/rpc_pipefs rpc_pipefs defaults     0 0

to automatically mount rpc_pipefs.

With spnfsd.conf configured for your environment and the mounts mounted as
described above, spnfsd can now be started.

On the MDS, execute spnfsd:

	spnfsd

The executable is located in the directory where it was built, and
may also have been installed elsewhere depending on how you built nfs-utils.
It will run in the foreground by default, and in fact will do so despite
any options suggesting the contrary (it's still a debugging build).

On the client, make sure the nfslayoutdriver module is loaded:

	modprobe nfslayoutdriver

Then mount the file system from the MDS:

	mount -t nfs4 mds:/ /mnt

You may now use spNFS by performing file system activities in /mnt.
If you create files in /mnt, you should see stripe files corresponding to
new files being created on the DSs.  The current implementation names the
stripe files based on the inode number of the file on the MDS.  For example,
if you create a file foo in /mnt and do an 'ls -li /mnt/foo':

	# ls -li foo
	1233 -rw-r--r-- 1 root root 0 Nov 29 15:54 foo

You should see stripe files on each under /pnfs (per the sample) named
1233.  The file /pnfs/1233 on DS1 will contain the first <stripe size> bytes
of data written to foo, DS2 will contain the next <stripe size> bytes, etc.
Removing /mnt/foo will remove the corresponding stripe files on the DSs.
Other file system operations should behave (mostly :-) as expected.


Troubleshooting
---------------

If you see data being written to the files on the MDS rather than
the stripe files, make sure the nfslayoutdriver is loaded on the client
(see above).

If you get a "permission denied" error, make sure mountd is running on the mds
(it occasionally fails to start).

Bugs, enhancements, compliments, complaints to: dmuntz@netapp.com


